def plot_roi(roi_img, bg_img=None, cut_coords=5, output_file=None, display_mode='mosaic', figure=None, axes=None,
             title=None, annotate=True, draw_cross=True, black_bg=True, threshold=0.5, alpha=0.7,
             cmap='tab10', dim='auto', vmin=None, vmax=None, resampling_interpolation='nearest', view_type='continuous',
             linewidths=2.5, colorbar=False, save_img=True, **kwargs):
    """

    Wrapper for nilearn's plot_roi method (with small modifications).

    Can be used in a nipype function node. In this case output_file should stay None and save_img should stay True!

    Parameters:
        Only parameter that does not occur in nilearn's plot_roi method is save_img.
        Set to False if you don't want to save the result and just need the plot object.
        This parameter is necessary because we substitute output_file by the current working directory and a suitable
        filename if output_file is set to None (default).
        In case the function is executed within a nipype function node, the current working directory is the working
        directory of the respective node.
        We introduced this modifications in order to be able to use this method easily in nipype function nodes.

    For more information about the other parameters, see the documentation of nilearn.
    https://nilearn.github.io/modules/generated/nilearn.plotting.plot_roi.html

    Only a few changes have been made to the default parameters.
    Here a mosaic plot with 5 columns is generated by default, the background of every plot is black and the default
    cmap has been changed.

    ATTENTION: If save_img is set to False, then you must close the plot yourself!
    Otherwise this could lead to memory leaks!

    Returns:
        plot (nilearn.plotting.displays.OrthoSlicer): Plot object.
        output_file (str): Path to the saved plot (if save_img is False, None is returned).

    Acknowledgements:
        Further informations:
            - https://nilearn.github.io/index.html

    """
    from nilearn import plotting
    import os

    if save_img:
        # User wants to save the image directly and doesn't want to only get the plot object to modify it further
        # before saving.
        if output_file is None:
            roi_img_name = roi_img.split('/')[-1].split('.')[0]  # Get filename without extension.
            # Plot will be saved in current working directory with the filename (without extension) of ROI image.
            # but with the suffix '_plot.png'
            output_file = os.path.join(os.getcwd(), roi_img_name + '_plot.png')
        else:
            # If the user has specified an absolute path, then we can directly use it.
            # If we have only received a relative path, then we append this relative path to the current working
            # directory.
            if not output_file.startswith('/'):
                output_file = os.path.join(os.getcwd(), output_file)
    else:
        output_file = None
        # If output_file is None, then nilearn won't save the image.
        # In this case, the user must close the plot themself! Otherwise this could lead to memory leaks!

    plot = plotting.plot_roi(roi_img, bg_img=bg_img, cut_coords=cut_coords, output_file=output_file,
                             display_mode=display_mode, figure=figure, axes=axes, title=title, annotate=annotate,
                             draw_cross=draw_cross,
                             black_bg=black_bg, threshold=threshold, alpha=alpha, cmap=cmap, dim=dim, vmin=vmin,
                             vmax=vmax, resampling_interpolation=resampling_interpolation, view_type=view_type,
                             linewidths=linewidths, colorbar=colorbar, **kwargs)

    return plot, output_file